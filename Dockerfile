# Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile
# Use the Node.js image with the required version for the project
FROM node:18-alpine AS builder

# Enable corepack to use pnpm
RUN corepack enable

# Set working directory
WORKDIR /app

# Copy package files first
COPY package.json pnpm-lock.yaml ./

# Install dependencies without running prepare script
RUN pnpm install --frozen-lockfile --ignore-scripts

# Copy all files to the working directory
COPY . .

# Now run the build process (which includes prepare step)
RUN pnpm run build

# Create the final release image
FROM node:18-alpine AS release

# Enable corepack to use pnpm
RUN corepack enable

# Set working directory
WORKDIR /app

# Copy package files first
COPY --from=builder /app/package.json /app/pnpm-lock.yaml ./

# Install only production dependencies
RUN pnpm install --frozen-lockfile --prod --ignore-scripts

# Copy built files
COPY --from=builder /app/build ./build

# Environment configuration for runtime (configured externally)
ENV REST_BASE_URL=""
ENV AUTH_BASIC_USERNAME=""
ENV AUTH_BASIC_PASSWORD=""
ENV AUTH_BEARER=""
ENV AUTH_APIKEY_HEADER_NAME=""
ENV AUTH_APIKEY_VALUE=""
ENV REST_ENABLE_SSL_VERIFY="true"
ENV REST_RESPONSE_SIZE_LIMIT="10000"

# Command to run the server
ENTRYPOINT ["node", "build/index.js"]